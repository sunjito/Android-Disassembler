apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlinx-serialization'
apply plugin: 'de.mannodermaus.android-junit5'
apply plugin: 'org.jlleitschuh.gradle.ktlint'
apply plugin: 'com.mikepenz.aboutlibraries.plugin'

android {
    compileSdkVersion 29
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        applicationId "com.kyhsgeekcode.disassembler"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 12
        versionName "2.0.4"
        multiDexEnabled true
        //testInstrumentationRunner "android.support.test.runner.   AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }

    /*packagingOptions {
        pickFirst 'lib/armeabi-v7a/libhello-jni.so'
        pickFirst 'lib/x86/libhello-jni.so'
    }*/
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    ktlintMainSourceSetCheck.enabled = false
    ktlintTestSourceSetCheck.enabled = false

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path file('CMakeLists.txt')
        }
        //cmake {
        //    path "src/main/cpp/CMakeLists.txt"
        //}
    }

    testOptions {
        junitPlatform {
            filters {
                engines {
                    include 'spek2'
                }
            }
            jacocoOptions {
                // here goes all jacoco config, for example
                html.enabled = true
                xml.enabled = false
                csv.enabled = false
            }
        }
        unitTests.all {
            testLogging.events = ["passed", "skipped", "failed"]
        }
    }

    ndkVersion " 21.3.6528147"
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.gms:play-services-ads:19.4.0'
    implementation 'com.github.codekidX:storage-chooser:2.0.4.4'
    implementation 'com.github.skydoves:colorpickerview:2.1.5'
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    implementation group: "pl.openrnd.android", name: "multi-level-listview", version: "1.0.1"
    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.android.support.constraint:constraint-layout:2.0.4'

    //implementation 'dotnet.msil.decompiler:+'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.core:core-ktx:1.3.2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation "com.louiscad.splitties:splitties-systemservices:$splitties_version"
    implementation("com.louiscad.splitties:splitties-appctx:$splitties_version")
    implementation 'org.apache.commons:commons-compress:1.20'
    // implementation("com.google.guava:guava:29.0-android")

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.jsoup:jsoup:1.13.1'

    // or "kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0" // JVM dependency
    implementation "androidx.multidex:multidex:2.0.1"
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.5'

    implementation 'androidx.preference:preference:1.1.1'
    implementation "com.mikepenz:aboutlibraries:8.6.8"
    implementation "androidx.cardview:cardview:1.0.0"

//    implementation 'mnemonik:mnemonik:2.0.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation 'com.github.tingyik90:snackprogressbar:6.2.0'

    testImplementation "org.junit.jupiter:junit-jupiter:5.7.0"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit5:$kotlin_version"
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:$spek_version"
    testImplementation "org.spekframework.spek2:spek-runner-junit5:$spek_version"
    // spek requires kotlin-reflect, omit when already in classpath
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.72"

    implementation 'com.gu.android:toolargetool:0.2.1@aar'
}
/*
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.1
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}*/
/*
model {
    /*android.signingConfigs {
        create ("myConfig") {
            keyAlias '--your-key-alias--'
            keyPassword '--key-password--'
            storeFile file('--/path/to/keystore.jks--')
            storePassword '--store-password--'
        }
    }*
    android {
        compileSdkVersion 26
        buildToolsVersion '28.0.3'

        defaultConfig {
            applicationId "com.kyhsgeekcode.disassembler"
            minSdkVersion.apiLevel 23
            targetSdkVersion.apiLevel 26
            versionCode 1
            versionName "1.4.5"
            //multiDexEnabled true
            ndk {
                moduleName "app/src/main/cpp/hello-jni.cpp"
                ldLibs.addAll([ "android", "log"])
            }

        }
        buildTypes {
            release {
                minifyEnabled true
                useProguard true
                proguardFiles.add(file('proguard-android.txt'))
                proguardFiles.add(file('proguard-rules.pro'))
               // proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
            debug {
                minifyEnabled false
                //useProguard false
                proguardFiles.add(file('proguard-android.txt'))
                proguardFiles.add(file('proguard-rules.pro'))

                //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }

        }
    }
}*/
